import {
      Connection,
        PublicKey,
          clusterApiUrl,
            Transaction,
              SystemProgram,
                LAMPORTS_PER_SOL,
                } from "@solana/web3.js";
                import {
                  PhantomWalletAdapter,
                  } from "@solana/wallet-adapter-phantom";
                  import {
                    SolflareWalletAdapter,
                    } from "@solana/wallet-adapter-solflare";

                    const connectBtn = document.getElementById("connectWallet");
                    const disconnectBtn = document.getElementById("disconnectWallet");
                    const switchBtn = document.getElementById("switchNetwork");
                    const walletAddressEl = document.getElementById("walletAddress");
                    const buyNowBtn = document.getElementById("buyNow");
                    const amountInput = document.getElementById("amountInput");
                    const usdValueEl = document.getElementById("usdValue");

                    let wallet = null;
                    let connected = false;
                    let currentNetwork = "mainnet-beta";
                    let connection = new Connection(clusterApiUrl(currentNetwork), "confirmed");

                    // سعر FREP
                    const FREP_PRICE = 0.001;

                    // ✅ تحديث الحاسبة
                    amountInput.addEventListener("input", () => {
                      const amount = parseFloat(amountInput.value) || 0;
                        usdValueEl.textContent = `القيمة بالدولار: $${(amount * FREP_PRICE).toFixed(4)}`;
                        });

                        // ✅ دوال الموالف
                        const wallets = {
                          phantom: new PhantomWalletAdapter(),
                            solflare: new SolflareWalletAdapter(),
                            };

                            async function connectWallet() {
                              const choice = prompt("اختر المحفظة: phantom / solflare");
                                if (!wallets[choice]) return alert("محفظة غير مدعومة");

                                  wallet = wallets[choice];
                                    await wallet.connect();

                                      connected = true;
                                        walletAddressEl.textContent = `العنوان: ${wallet.publicKey.toBase58().slice(0, 6)}...${wallet.publicKey.toBase58().slice(-4)}`;
                                          connectBtn.classList.add("hidden");
                                            disconnectBtn.classList.remove("hidden");
                                              switchBtn.classList.remove("hidden");
                                                buyNowBtn.disabled = currentNetwork !== "mainnet-beta";
                                                }

                                                async function disconnectWallet() {
                                                  if (wallet) await wallet.disconnect();
                                                    connected = false;
                                                      walletAddressEl.textContent = "";
                                                        connectBtn.classList.remove("hidden");
                                                          disconnectBtn.classList.add("hidden");
                                                            switchBtn.classList.add("hidden");
                                                              buyNowBtn.disabled = true;
                                                              }

                                                              async function switchNetwork() {
                                                                const choice = prompt("اختر الشبكة: mainnet-beta / devnet / testnet");
                                                                  if (!choice) return;
                                                                    currentNetwork = choice;
                                                                      connection = new Connection(clusterApiUrl(currentNetwork), "confirmed");
                                                                        document.getElementById("networkInfo").textContent = `الشبكة: ${currentNetwork}`;
                                                                          buyNowBtn.disabled = currentNetwork !== "mainnet-beta";
                                                                          }

                                                                          async function buyNow() {
                                                                            if (!connected) return alert("اتصل بالمحفظة أولاً");
                                                                              if (currentNetwork !== "mainnet-beta") return alert("المعاملة فقط على سولانا mainnet-beta");

                                                                                const amount = parseFloat(amountInput.value);
                                                                                  if (!amount || amount <= 0) return alert("أدخل كمية صالحة");

                                                                                    const lamports = amount * FREP_PRICE * LAMPORTS_PER_SOL;
                                                                                      const treasury = new PublicKey("ضع-محفظة-الخزينة-الخاصة-بك-هنا"); // ← استبدلها بمحفظتك

                                                                                        const transaction = new Transaction().add(
                                                                                            SystemProgram.transfer({
                                                                                                  fromPubkey: wallet.publicKey,
                                                                                                        toPubkey: treasury,
                                                                                                              lamports,
                                                                                                                  })
                                                                                                                    );

                                                                                                                      const signature = await wallet.sendTransaction(transaction, connection);
                                                                                                                        alert(`تم إرسال العملية ✅ \nالتوقيع: ${signature}`);
                                                                                                                        }

                                                                                                                        // ✅ ربط الأحداث
                                                                                                                        connectBtn.addEventListener("click", connectWallet);
                                                                                                                        disconnectBtn.addEventListener("click", disconnectWallet);
                                                                                                                        switchBtn.addEventListener("click", switchNetwork);
                                                                                                                        buyNowBtn.addEventListener("click", buyNow);
}